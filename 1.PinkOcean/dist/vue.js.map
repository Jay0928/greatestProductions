{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(val){\n    return typeof val == 'function'\n}\nexport function isObject(val){\n    return typeof val == 'object' && val !== null;\n}\nexport let isArray = Array.isArray","let oldArrayPrototype = Array.prototype; // 获取数组的老的原型方法\nexport let arrayMethods = Object.create(oldArrayPrototype); // 让arrayMethods 通过__proto__ 能获取到数组的方法\n// arrayMethods.__proto__ == oldArrayPrototype\n// arrayMethods.push = function\nlet methods = [ // 只有这七个方法 可以导致数组发生变化\n    'push',\n    'shift',\n    'pop',\n    'unshift',\n    'reverse',\n    'sort',\n    'splice'\n]\nmethods.forEach(method => {\n    arrayMethods[method] = function (...args) {\n        // 数组新增的属性 要看一下是不是对象，如果是对象 继续进行劫持\n        // 需要调用数组原生逻辑\n        oldArrayPrototype[method].call(this,...args)\n        // todo... 可以添加自己逻辑 函数劫持 切片\n        let inserted = null;\n        let ob = this.__ob__;\n        switch (method) {\n            case 'splice': // 修改 删除  添加  arr.splice(0,0,100,200,300)\n                inserted = args.slice(2); // splice方法从第三个参数起 是增添的新数据\n                break;\n            case 'push':\n            case 'unshift':\n                inserted = args;// 调用push 和 unshift 传递的参数就是新增的逻辑\n                break;\n        }\n        // inserted[] 遍历数组 看一下它是否需要进行劫持\n        if(inserted) ob.observeArray(inserted)\n  }\n});\n\n// 属性的查找：是先找自己身上的，找不到去原型上查找\n","import { isArray, isObject } from \"../utils\";\nimport { arrayMethods } from \"./array\";\n\n// 1.每个对象都有一个__proto__属性 它指向所属类的原型   fn.__proto__ = Function.prototype\n// 2.每个原型上都有一个constructor属性 指向 函数本身 Function.prototype.constrcutr = Function\nclass Observer {\n    constructor(value){\n        // 不让__ob__ 被遍历到\n        // value.__ob__ = this; // 我给对象和数组添加一个自定义属性\n        Object.defineProperty(value,'__ob__',{\n            value:this,\n            enumerable:false // 标识这个属性不能被列举出来，不能被循环到\n        })\n        if(isArray(value)){\n            // 更改数组原型方法, 如果是数组 我就改写数组的原型链\n            value.__proto__ = arrayMethods; // 重写数组的方法\n            this.observeArray(value);\n        }else{\n            this.walk(value); // 核心就是循环对象\n        }\n    }\n    observeArray(data){ // 递归遍历数组，对数组内部的对象再次重写 [[]]  [{}]\n        // vm.arr[0].a = 100;\n        // vm.arr[0] = 100;\n        data.forEach(item=> observe(item)); // 数组里面如果是引用类型那么是响应式的\n    }\n    walk(data){\n        Object.keys(data).forEach(key=>{ // 要使用defineProperty重新定义\n            defineReactive(data,key,data[key]);\n        });\n    }\n}\n// vue2 应用了defineProperty需要一加载的时候 就进行递归操作，所以好性能，如果层次过深也会浪费性能\n// 1.性能优化的原则：\n// 1) 不要把所有的数据都放在data中，因为所有的数据都会增加get和set\n// 2) 不要写数据的时候 层次过深， 尽量扁平化数据 \n// 3) 不要频繁获取数据\n// 4) 如果数据不需要响应式 可以使用Object.freeze 冻结属性 \nfunction defineReactive(obj,key,value){ // vue2 慢的原因 主要在这个方法中\n    observe(value); // 递归进行观测数据，不管有多少层 我都进行defineProperty\n    Object.defineProperty(obj,key,{\n        get(){ // 后续会有很多逻辑\n            return value; // 闭包，次此value 会像上层的value进行查找\n        },\n        set(newValue){  // 如果设置的是一个对象那么会再次进行劫持\n            if(newValue === value) return\n            observe(newValue);\n            console.log('修改')\n            value = newValue\n        }\n    })\n}\nexport function observe(value){\n    // 1.如果value不是对象，那么就不用观测了，说明写的有问题\n    if(!isObject(value)){\n        return;\n    }\n    if(value.__ob__){\n        return ; // 一个对象不需要重新被观测\n    }\n    // 需要对对象进行观测 （最外层必须是一个{} 不能是数组）\n\n    // 如果一个数据已经被观测过了 ，就不要在进行观测了， 用类来实现，我观测过就增加一个标识 说明观测过了，在观测的时候 可以先检测是否观测过，如果观测过了就跳过检测\n    return new Observer(value)\n}","import { observe } from \"./observe\";\nimport { isFunction } from \"./utils\";\n\nfunction proxy(vm,key,source){ // 取值的时候做代理，不是暴力的把_data 属性赋予给vm, 而且直接赋值会有命名冲突问题\n    Object.defineProperty(vm,key,{\n        get(){ // ?\n            return vm[source][key]; // vm._data.message \n        },\n        set(newValue){ // ?\n            vm[source][key] = newValue; // vm._data.message = newValue\n        }\n    })\n}\n\nexport function initState(vm){\n    const opts = vm.$options;\n\n    if(opts.data){\n        initData(vm);\n    }\n\n}\nfunction initData(vm){\n    let data = vm.$options.data; // 用户传入的数据\n    \n    data = vm._data =  isFunction(data) ? data.call(vm) : data; // _data 已经是响应式的了\n\n    // 需要将data变成响应式的 Object.defineProperty， 重写data中的所有属性\n    observe(data); // 观测对象中的属性\n\n    for(let key in data){ // vm.message => vm._data.message\n        proxy(vm,key,'_data');// 代理vm上的取值和设置值 和  vm._data 没关系了\n    }\n}\n","import { initState } from './state'\nexport function initMixin(Vue) {\n    Vue.prototype._init = function(options) {\n        const vm = this;\n        vm.$options = options; \n        initState(vm);\n        if (vm.$options.el) {\n            // 要将数据挂载到页面上\n        }\n    }\n}","import { initMixin } from \"./init\";\n\nfunction Vue(options){\n    this._init(options); // 实现vue的初始化功能\n}\n\ninitMixin(Vue);\n\n\nexport default Vue;"],"names":["isFunction","val","isObject","isArray","Array","oldArrayPrototype","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observeArray","Observer","constructor","value","defineProperty","enumerable","__proto__","walk","data","item","observe","keys","key","defineReactive","obj","get","set","newValue","console","log","proxy","vm","source","initState","opts","$options","initData","_data","initMixin","Vue","_init","options","el"],"mappings":"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"}